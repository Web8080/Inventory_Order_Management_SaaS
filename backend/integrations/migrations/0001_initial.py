# Generated by Django 4.2.24 on 2025-09-26 19:10

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Integration",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "integration_type",
                    models.CharField(
                        choices=[
                            ("shopify", "Shopify"),
                            ("woocommerce", "WooCommerce"),
                            ("amazon", "Amazon"),
                            ("ebay", "eBay"),
                            ("quickbooks", "QuickBooks"),
                            ("xero", "Xero"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("inactive", "Inactive"),
                            ("active", "Active"),
                            ("error", "Error"),
                            ("pending", "Pending"),
                        ],
                        default="inactive",
                        max_length=20,
                    ),
                ),
                ("api_key", models.CharField(blank=True, max_length=255, null=True)),
                ("api_secret", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "webhook_secret",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("base_url", models.URLField(blank=True, null=True)),
                ("config", models.JSONField(blank=True, default=dict)),
                ("is_enabled", models.BooleanField(default=True)),
                ("auto_sync_products", models.BooleanField(default=True)),
                ("auto_sync_orders", models.BooleanField(default=True)),
                ("auto_sync_inventory", models.BooleanField(default=True)),
                ("sync_frequency_minutes", models.IntegerField(default=60)),
                ("last_sync_at", models.DateTimeField(blank=True, null=True)),
                (
                    "last_sync_status",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("last_sync_error", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "integrations",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="IntegrationLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("debug", "Debug"),
                            ("info", "Info"),
                            ("warning", "Warning"),
                            ("error", "Error"),
                            ("critical", "Critical"),
                        ],
                        max_length=20,
                    ),
                ),
                ("message", models.TextField()),
                ("details", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "integration_logs",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="IntegrationMapping",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "mapping_type",
                    models.CharField(
                        choices=[
                            ("product", "Product"),
                            ("order", "Order"),
                            ("customer", "Customer"),
                            ("inventory", "Inventory"),
                        ],
                        max_length=20,
                    ),
                ),
                ("local_field", models.CharField(max_length=100)),
                ("external_field", models.CharField(max_length=100)),
                (
                    "transformation",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("is_required", models.BooleanField(default=False)),
                (
                    "default_value",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "integration_mappings",
                "ordering": ["mapping_type", "local_field"],
            },
        ),
        migrations.CreateModel(
            name="IntegrationSync",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "sync_type",
                    models.CharField(
                        choices=[
                            ("products", "Products"),
                            ("orders", "Orders"),
                            ("inventory", "Inventory"),
                            ("customers", "Customers"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "direction",
                    models.CharField(
                        choices=[
                            ("import", "Import"),
                            ("export", "Export"),
                            ("bidirectional", "Bidirectional"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("running", "Running"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("records_processed", models.IntegerField(default=0)),
                ("records_successful", models.IntegerField(default=0)),
                ("records_failed", models.IntegerField(default=0)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("error_details", models.JSONField(blank=True, default=dict)),
                ("sync_parameters", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "integration_syncs",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="IntegrationWebhook",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("event_type", models.CharField(max_length=100)),
                (
                    "external_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processed", "Processed"),
                            ("failed", "Failed"),
                            ("ignored", "Ignored"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("payload", models.JSONField()),
                ("headers", models.JSONField(blank=True, default=dict)),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("retry_count", models.IntegerField(default=0)),
                ("max_retries", models.IntegerField(default=3)),
                ("received_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "integration_webhooks",
                "ordering": ["-received_at"],
            },
        ),
        migrations.CreateModel(
            name="ShopifyStore",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("shop_domain", models.CharField(max_length=255)),
                ("shop_name", models.CharField(max_length=255)),
                (
                    "shop_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                ("shop_phone", models.CharField(blank=True, max_length=20, null=True)),
                ("shop_currency", models.CharField(default="USD", max_length=3)),
                ("shop_timezone", models.CharField(default="UTC", max_length=50)),
                ("access_token", models.TextField()),
                ("scope", models.TextField(blank=True, null=True)),
                ("auto_fulfill_orders", models.BooleanField(default=False)),
                ("sync_inventory_levels", models.BooleanField(default=True)),
                ("sync_product_updates", models.BooleanField(default=True)),
                ("webhook_orders_create", models.BooleanField(default=True)),
                ("webhook_orders_updated", models.BooleanField(default=True)),
                ("webhook_orders_paid", models.BooleanField(default=True)),
                ("webhook_orders_cancelled", models.BooleanField(default=True)),
                ("webhook_products_create", models.BooleanField(default=True)),
                ("webhook_products_update", models.BooleanField(default=True)),
                ("webhook_inventory_levels_update", models.BooleanField(default=True)),
                ("connected_at", models.DateTimeField(auto_now_add=True)),
                ("last_sync_at", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "shopify_stores",
            },
        ),
        migrations.CreateModel(
            name="WooCommerceStore",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("store_url", models.URLField()),
                ("store_name", models.CharField(max_length=255)),
                ("store_description", models.TextField(blank=True, null=True)),
                ("store_currency", models.CharField(default="USD", max_length=3)),
                ("consumer_key", models.CharField(max_length=255)),
                ("consumer_secret", models.CharField(max_length=255)),
                ("auto_fulfill_orders", models.BooleanField(default=False)),
                ("sync_inventory_levels", models.BooleanField(default=True)),
                ("sync_product_updates", models.BooleanField(default=True)),
                (
                    "webhook_secret",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("webhook_orders_created", models.BooleanField(default=True)),
                ("webhook_orders_updated", models.BooleanField(default=True)),
                ("webhook_orders_deleted", models.BooleanField(default=True)),
                ("webhook_products_created", models.BooleanField(default=True)),
                ("webhook_products_updated", models.BooleanField(default=True)),
                ("webhook_products_deleted", models.BooleanField(default=True)),
                ("connected_at", models.DateTimeField(auto_now_add=True)),
                ("last_sync_at", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "integration",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="woocommerce_store",
                        to="integrations.integration",
                    ),
                ),
            ],
            options={
                "db_table": "woocommerce_stores",
            },
        ),
    ]
